---
title: MySQL for PCF
owner: MySQL
---

This is documentation for the MySQL for Pivotal Cloud Foundry (PCF) service tile. The tile can be downloaded from [Pivotal Network](https://network.pivotal.io/products/p-mysql/).

<p class="note"><strong>Note</strong>:
This documents MySQL for PCF v1.10, a pre-provisioned service that supports single-node or high-availability cluster architectures. For the on-demand service that creates dedicated service instances dynamically, see the v2.0 documentation <a href="http://docs.pivotal.io/p-mysql/2-0">here</a> or select <strong>v2.0</strong> from the version dropdown at the top of this page.</p>

## <a id="about-mysql"></a>About MySQL##

MySQL is a powerful open-source relational database used by apps since the mid-90s. Developers have relied on MySQL as a first step to storing, processing and sharing data. As its user community has grown, MySQL has become a robust system capable of handling a wide variety of use cases and very significant workloads. Unlike other traditional databases which centralize and consolidate data, MySQL lends itself to dedicated deployment supporting the "shared nothing" context of building apps in the cloud.

## <a id="about-p-mysql"></a>About MySQL for PCF ##

The MySQL for PCF product delivers a fully managed, "Database as a Service" to Cloud Foundry users. The tile deploys and maintains a MySQL server running a recent release of [MariaDB](http://www.mariadb.org) and [Galera](http://galeracluster.com); an SQL proxy, [Switchboard](https://github.com/cloudfoundry-incubator/switchboard); and a service broker. The tile configures sane defaults for a general-use relational database service.

With MySQL for PCF installed, developers can attach a database to their apps in as little as two commands, `cf create-service` and `cf bind-service`. Developers can retrieve connection credentials in the [standard manner](https://docs.pivotal.io/pivotalcf/devguide/deploy-apps/environment-variable.html#VCAP-SERVICES), from the `VCAP-SERVICES` environment variable. Developers can select from a menu of service plans options, which are configured by the platform operator.

You can deploy MySQL for PCF in either single-node or high availability (HA) topology. The HA topology has three MySQL servers, two proxies, and two service brokers, and you need to supply a load balancer.

For developers using BOSH CLI, there are a few things to keep in mind:

- When using PCF v1.10, BOSH CLI v1 is used.
- When using PCF v1.11, you can use either BOSH CLI v1 or BOSH CLI v2, but we recommend using the BOSH CLI v2 (as v1 will be deprecated in the future)
- In PCF v1.12, you must use the BOSH CLI v2.

## <a id="product-snapshot"></a>Product Snapshot ##

The following table provides version and version-support information about MySQL for PCF:

<table class="nice">
    <th>Element</th>
    <th>Details</th>
    <tr>
        <td>Version</td>
        <td>v1.10.6</td>
    </tr>
    <tr>
        <td>Release date</td>
        <td>November 3, 2017</td>
    </tr>
    <tr>
        <td>Software component version</td>
        <td>MariaDB v10.1.26 and Galera v25.3.20</td>
    </tr>
    <tr>
        <td>Compatible Ops Manager version(s)</td>
        <td>v1.10.x, v1.11.x, and v1.12.x</td>
    </tr>
    <tr>
        <td>Compatible Elastic Runtime version(s)</td>
        <td>v1.10.<strong>9</strong>, v1.11.x, and v1.12.x</td>
    </tr>
    <tr>
        <td>IaaS support</td>
        <td>AWS, GCP, Azure, OpenStack, and vSphere</td>
    </tr>
    <tr>
        <td>IPsec support</td>
        <td>Yes</td>
    </tr>
</table>

##<a id="other-services"></a> MySQL for PCF and Other PCF Services

<%= partial '../../mysql/odb/on-demand-service-table' %>

## <a id="upgrading"></a>Prepare to Upgrade ##


Before upgrading to the latest version of MySQL for PCF, do the following:

1. Confirm that you are on Ops Manager v1.10 or later and are on MySQL for PCF v1.9 or later.

    <table border="1" class="nice">
    <tr>
    	<th rowspan="2">Ops Manager Version</th>
    	<th colspan="2">Supported Upgrades from Imported MySQL Installation</th>
    </tr>
      <tr>
      	<th>From</th>
      	<th>To</th>
      <tr>
    <tr>
      <th rowspan="4">v1.9.x</th>
      <tr><td rowspan="2">v1.8.x</td><td>Next v1.8.x</td></tr>
          <tr><td>v1.9.x</td></tr>
      <tr><td>v1.9.x</td><td>Next v1.9.x</td></tr>
    </tr>
    <tr>
      <th rowspan="6">v1.10.x</th>
      <tr><td rowspan="2">v1.8.x</td><td>Next v1.8.x</td></tr>
          <tr><td>v1.9.x</td></tr>
      <tr><td rowspan="2">v1.9.x</td><td>Next v1.9.x</td></tr>
          <tr><td>v1.10.x</td></tr>
      <tr><td>v1.10.x</td><td>Next v1.10.x</td></tr>
    </tr>
    <tr>
      <th rowspan="5">v1.11.x</th>
      <tr><td>v1.8.x</td><td>**Not supported**</td></tr>
      <tr><td rowspan="2">v1.9.x</td><td>**Do not use next** v1.9.x</td></tr>
        <tr><td>v1.10.x</td></tr>
      <tr><td>v1.10.x</td><td>Next v1.10.x</td></tr>
    </tr>
    </table><br>

    For more information about upgrade versions, see the [Product Compatibility Matrix](https://docs.pivotal.io/resources/product-compatibility-matrix.pdf).

1. If you are running in the HA configuration, check the health of the cluster:
  1. Download, configure, and run the [mysql-diag](http://bit.ly/pivotal-mysql-diag) tool.
  2. If `mysql-diag` shows any cluster issues, fix them.
  3. Do not apply changes to the upgrade until the issues have been resolved.

1. As of v1.9.0, MySQL for PCF enables strict mode.
This means that where previously large indices were silently truncated,
now `ALTER TABLE` and `CREATE INDEX` statements may fail with an error.
<p class='note'><strong>IMPORTANT</strong>: If any of your apps already use or want to create indices
with more than 767 bytes, then create or alter the apps to use `ROW_FORMAT DYNAMIC` or `ROW_FORMAT COMPRESSED`.</p>
A workaround for failures due to strict mode is to use the `IGNORE` keyword: this converts the error to a warning. <br>
For more information about these changes, see [MySQL Server Tuning and Defaults](release-notes.html#tuning).

## <a id="deprecation-lock-tables"></a>Table Locks are Now Configurable

In previous releases, Pivotal announced the intent to deprecate table locks for all service bindings.
However, Pivotal now leaves this choice up to the operator, for more information, see [Allow Table Locks](configuring.html#allow-table-locks).

## <a id="configurations"></a>Enterprise Readiness by Topology ##

The table below shows the enterprise-readiness of each MySQL for PCF topology. Consult the [Known Issues](known-issues.html) topic for information about issues in current releases of MySQL for PCF.


<center>
<table>
  <tr><th></th><th>Single-Node</th><th>High Availability (HA)</th></tr>
  <tr><td>**MySQL**</td><td>1 node</td><td>3-node cluster</td></tr>
  <tr><td>**SQL Proxy**</td><td>1 node</td><td>2 nodes</td></tr>
  <tr><td>**Service Broker**</td><td>1 node</td><td>2 nodes</td></tr>
  <tr><td>High Availability</td><td><em>n/a</em></td><td>Yes</td></tr>
  <tr><td>Multi-AZ Support</td><td><em>n/a</em></td><td>Yes \*</td></tr>
  <tr><td>Rolling Upgrades</td><td><em>n/a</em></td><td>Yes</td></tr>
  <tr><td>Automated Backups</td><td>Yes</td><td>Yes</td></tr>
  <tr><td>Customizable Plans</td><td>Yes</td><td>Yes</td></tr>
  <tr><td>Customizable VM Instances</td><td>Yes</td><td>Yes</td></tr>
  <tr><td>Plan Migrations</td><td>Yes</td><td>Yes</td></tr>
  <tr><td>Encrypted Communication</td><td>Yes &#x271D;</td><td>Yes &#x271D;</td></tr>
  <tr><td>Encrypted Data at-rest</td><td><em>n/a</em></td><td><em>n/a</em></td></tr>
  <tr><td>Long-lived Canaries</td><td><em>n/a</em></td><td>Replication Canary</td></tr>
</table>
</center>

(\*) vSphere and AWS (1.8.0-edge.15 and later)<br>
(&#x271D;) Requires IPSEC BOSH plug-in

## <a id="limitations"></a>High Availability Limitations

When deployed in HA topology, MySQL for PCF runs three master nodes. This cluster arrangement imposes some limitations that you should be aware of, which do not apply to single-node MySQL database servers.

- Although two proxy instances are deployed by default, there is no automation to direct clients from one to the other. See the note in the [Proxy](proxy.html) section, as well as the entry in [Known Issues](known-issues.html).
- MySQL for PCF only supports the InnoDB storage engine; it is the default storage engine for new tables. Pre-existing tables that are not InnoDB are at risk because they are not replicated within a cluster.
- The database servers are shared, managed by multi-tenant processes to serve apps across the PCF deployment. Although data is securely isolated between tenants using unique credentials, app performance may be impacted by noisy neighbors.
- Round-trip latency between database nodes must be less than five seconds. Latency exceeding this results in a network partition. If more than half of the nodes are partitioned, the cluster loses quorum and become unusable until manually bootstrapped.
- See also the list of [Known Limitations](https://mariadb.com/kb/en/mariadb/mariadb-galera-cluster-known-limitations/) in MariaDB cluster.


## <a id="release-notes"></a>Release Notes ##

Consult the [Release Notes](release-notes.html) for information about changes between versions of this product.


## <a id="known-issues"></a>Known Issues ##

Consult the [Known Issues](known-issues.html) topic for information about issues in current releases of MySQL for PCF.

##<a id="feedback"></a> Feedback

Please provide any bugs, feature requests, or questions to [the Pivotal Cloud Foundry Feedback list](mailto:cfâ€“feedback@pivotal.io).
